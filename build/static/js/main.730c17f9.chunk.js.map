{"version":3,"sources":["Components/Title/Title.js","Components/Digit/Digit.js","Components/Row/Row.js","Components/Button/Button.js","Components/Board/Board.js","Components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Digit","props","col","type","value","data","onChange","event","change","row","target","Row","method","Button","onClick","text","Board","state","board","solveSudoku","bind","demo1","demo2","reset","digitInput","this","setState","grid","grid2","solutionNum","possible","x","y","n","i","x0","Math","floor","y0","j","isSolved","boo1","Number","temp","isNaN","checkValidInput","boo2","val","counter","checkDuplicate","getCount","alert","solve","tempBoard","React","Component","Footer","style","textAlign","href","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.730c17f9.chunk.js","sourcesContent":["import React from \"react\";\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <div className='content'>\n      <h3>Sudoku Solver</h3>\n      <ul >\n        <b>Instructions:</b>\n        <li>Input 0 means the value is unknown</li>\n        <li>Click \"Solve this Sudoku!\" when inputs are ready</li>\n        <li>All invalid inputs would be rejected</li>\n        <li>Click reset to set everything back to 0</li>\n        <li>Click Demo to use pre-loaded sudoku.</li>\n        <li>Put in your sudoku, and <b>enjoy!</b></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport './Digit.css';\n\nconst Digit = (props) => {\n    \n    if (props.col === 8) {\n        return (\n            <div className='digit2'>\n                <input type='text' value={props.data}\n                onChange={(event) => {\n                    props.change(props.row, props.col, event.target.value);\n                }} ></input>\n            </div>\n        )\n    } else if ((props.col % 3) === 2) {\n        return (\n            <div className='digit'>\n                <input type='text' value={props.data}\n                onChange={(event) => {\n                    props.change(props.row, props.col, event.target.value);\n                }} ></input>\n            </div>\n        )\n    } else {\n        return (\n            <div className='digit2'>\n                <input type='text' value={props.data}\n                onChange={(event) => {\n                    props.change(props.row, props.col, event.target.value);\n                }} ></input>\n            </div>\n        )\n    }\n\n    \n}\n\nexport default Digit\n","import React from 'react'\nimport './Row.css';\nimport Digit from '../Digit/Digit'\n\nconst Row = (props) => {\n    return (\n        <div className=\"row\">\n            <Digit change={props.method} row={props.row} col={0} data={props.data[0]} />\n            <Digit change={props.method} row={props.row} col={1} data={props.data[1]} />\n            <Digit change={props.method} row={props.row} col={2} data={props.data[2]} />\n            <Digit change={props.method} row={props.row} col={3} data={props.data[3]} />\n            <Digit change={props.method} row={props.row} col={4} data={props.data[4]} />\n            <Digit change={props.method} row={props.row} col={5} data={props.data[5]} />\n            <Digit change={props.method} row={props.row} col={6} data={props.data[6]} />\n            <Digit change={props.method} row={props.row} col={7} data={props.data[7]} />\n            <Digit change={props.method} row={props.row} col={8} data={props.data[8]} />\n        </div>\n    )\n}\n\nexport default Row\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <div className='Button'>\n      <button onClick={() => {\n          props.method();\n      }} >{props.text}</button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Board.css\";\nimport Row from \"../Row/Row\";\nimport Button from \"../Button/Button\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      board: [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      ],\n    };\n\n    this.solveSudoku = this.solveSudoku.bind(this);\n    this.demo1 = this.demo1.bind(this);\n    this.demo2 = this.demo2.bind(this);\n    this.reset = this.reset.bind(this);\n    this.digitInput = this.digitInput.bind(this);\n  }\n\n  reset() {\n    const clean = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n    this.setState({\n      board: clean,\n    });\n  }\n\n  demo1() {\n    const demo1 = [\n      [2, 0, 0, 3, 0, 0, 0, 0, 0],\n      [8, 0, 4, 0, 6, 2, 0, 0, 3],\n      [0, 1, 3, 8, 0, 0, 2, 0, 0],\n      [0, 0, 0, 0, 2, 0, 3, 9, 0],\n      [5, 0, 7, 0, 0, 0, 6, 2, 1],\n      [0, 3, 2, 0, 0, 6, 0, 0, 0],\n      [0, 2, 0, 0, 0, 9, 1, 4, 0],\n      [6, 0, 1, 2, 5, 0, 8, 0, 9],\n      [0, 0, 0, 0, 0, 1, 0, 0, 2],\n    ];\n    this.setState({\n      board: demo1,\n    });\n  }\n\n  demo2() {\n    const demo2 = [\n      [0, 0, 0, 2, 6, 0, 7, 0, 1],\n      [6, 8, 0, 0, 7, 0, 0, 9, 0],\n      [1, 9, 0, 0, 0, 4, 5, 0, 0],\n      [8, 2, 0, 1, 0, 0, 0, 4, 0],\n      [0, 0, 4, 6, 0, 2, 9, 0, 0],\n      [0, 5, 0, 0, 0, 3, 0, 2, 8],\n      [0, 0, 9, 3, 0, 0, 0, 7, 4],\n      [0, 4, 0, 0, 5, 0, 0, 3, 6],\n      [7, 0, 3, 0, 1, 8, 0, 0, 0],\n    ];\n    this.setState({\n      board: demo2,\n    });\n  }\n\n  solveSudoku() {\n    let grid = this.state.board;\n    let grid2 = grid;\n    let solutionNum = 0;\n\n    function checkValidInput() {\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          grid[i][j] = Number(grid[i][j]);\n        }\n      }\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          let temp = grid[i][j];\n          if (temp > 9 || temp < 0 || isNaN(temp) === true) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    function checkDuplicate() {\n      for (let x = 0; x < 9; x++) {\n        for (let y = 0; y < 9; y++) {\n          let val = grid[x][y];\n          if (val !== 0) {\n            let counter = 0;\n            for (let i = 0; i < 9; i++) {\n              if (grid[i][y] === val) {\n                counter++;\n              }\n              if (grid[x][i] === val) {\n                counter++;\n              }\n            }\n            const x0 = Math.floor(x / 3) * 3;\n            const y0 = Math.floor(y / 3) * 3;\n            for (let i = 0; i < 3; i++) {\n              for (let j = 0; j < 3; j++) {\n                if (grid[x0 + i][y0 + j] === val) {\n                  counter++;\n                }\n              }\n            }\n            if (counter > 3) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    }\n\n    function possible(x, y, n) {\n      for (let i = 0; i < 9; i++) {\n        if (grid[i][y] === n) {\n          return false;\n        }\n        if (grid[x][i] === n) {\n          return false;\n        }\n      }\n      const x0 = Math.floor(x / 3) * 3;\n      const y0 = Math.floor(y / 3) * 3;\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (grid[x0 + i][y0 + j] === n) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    function isSolved() {\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          if (grid[i][j] === 0) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    function getCount() {\n      if (isSolved() === true) {\n        return true;\n      }\n\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          if (grid[i][j] === 0) {\n            for (let n = 1; n < 10; n++) {\n              if (possible(i, j, n) === true) {\n                grid[i][j] = n;\n                if (getCount() === true) {\n                  solutionNum++;\n                  if (solutionNum > 1) {\n                    break;\n                  }\n                  grid[i][j] = 0;\n                  return false;\n                }\n                grid[i][j] = 0;\n              }\n            }\n            return false;\n          }\n        }\n      }\n    }\n\n    function solve() {\n      if (isSolved() === true) {\n        return true;\n      }\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          if (grid[i][j] === 0) {\n            for (let n = 1; n < 10; n++) {\n              if (possible(i, j, n) === true) {\n                grid[i][j] = n;\n                if (solve() === true) {\n                  return true;\n                }\n                grid[i][j] = 0;\n              }\n            }\n            return false;\n          }\n        }\n      }\n    }\n\n    // Count how many possible solutions\n    const boo1 = checkValidInput();\n    const boo2 = checkDuplicate();\n    if (boo1 === false) {\n      alert(\n        \"Invalid inputs.\\nIntegers should be between 1 - 9.\\nNo special characters allowed.\"\n      );\n      return;\n    }\n    if (boo2 === false) {\n      alert(\"Invalid inputs. Repetitive values exist.\\nDouble check that inputs are correct.\");\n      return;\n    }\n    if (boo1 === true && boo2 === true) {\n      getCount();\n      grid = grid2;\n      if (solutionNum < 1) {\n        alert(\n          \"There is no possible solution to this sudoku.\\nPlease make sure the sudoku is solvable.\"\n        );\n        return false;\n      } else if (solutionNum === 1) {\n        solve();\n        this.setState({\n          board: grid2,\n        });\n        return true;\n      } else {\n        alert(\"There are more than one solution.\\nPlease check the sudoku is valid.\");\n        return false;\n      }\n    }\n  }\n\n  digitInput(x, y, n) {\n    let tempBoard = this.state.board;\n    tempBoard[x][y] = n;\n    this.setState({\n      board: tempBoard,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board\">\n          <Row method={this.digitInput} row={0} data={this.state.board[0]} />\n          <Row method={this.digitInput} row={1} data={this.state.board[1]} />\n          <Row method={this.digitInput} row={2} data={this.state.board[2]} />\n        </div>\n        <div className=\"board\">\n          <Row method={this.digitInput} row={3} data={this.state.board[3]} />\n          <Row method={this.digitInput} row={4} data={this.state.board[4]} />\n          <Row method={this.digitInput} row={5} data={this.state.board[5]} />\n        </div>\n        <div className=\"board\">\n          <Row method={this.digitInput} row={6} data={this.state.board[6]} />\n          <Row method={this.digitInput} row={7} data={this.state.board[7]} />\n          <Row method={this.digitInput} row={8} data={this.state.board[8]} />\n        </div>\n        <Button method={this.solveSudoku} text=\"Solve this Sudoku!\" />\n        <Button method={this.reset} text=\"Reset the board\" />\n        <Button method={this.demo1} text=\"Demo Sudoku1\" />\n        <Button method={this.demo2} text=\"Demo Sudoku2\" />\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div style={{textAlign:'center'}}>\n            <hr />\n            <p>Created by Jian Qin, 2021</p>\n            <a href='https://qinjian.xyz'><i>Learn more</i></a>\n            <div style={{height:'30px'}}></div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport Title from './Components/Title/Title';\nimport Board from './Components/Board/Board';\nimport Footer from './Components/Footer/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <Board />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}